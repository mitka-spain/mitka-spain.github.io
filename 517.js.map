{"version":3,"file":"517.js","mappings":"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","sources":["webpack://inqviz-excel/./node_modules/uuid/dist/esm-browser/native.js","webpack://inqviz-excel/./node_modules/uuid/dist/esm-browser/rng.js","webpack://inqviz-excel/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://inqviz-excel/./node_modules/uuid/dist/esm-browser/v4.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/callbacks/base.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/tracers/console.js","webpack://inqviz-excel/./node_modules/uuid/dist/esm-browser/regex.js","webpack://inqviz-excel/./node_modules/langsmith/dist/utils/async_caller.js","webpack://inqviz-excel/./node_modules/langsmith/dist/utils/messages.js","webpack://inqviz-excel/./node_modules/langsmith/dist/utils/env.js","webpack://inqviz-excel/./node_modules/langsmith/dist/client.js","webpack://inqviz-excel/./node_modules/uuid/dist/esm-browser/validate.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/env.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/tracers/tracer_langchain.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/callbacks/promises.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/callbacks/manager.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/tracers/initialize.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/load/map_keys.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/load/serializable.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/messages/index.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/prompt_values.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/stream.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/tracers/log_stream.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/tracers/root_listener.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/runnables/base.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/runnables/config.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/tracers/base.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/async_caller.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: typeof process !== \"undefined\"\n                ? // eslint-disable-next-line no-process-env\n                    process.env?.LANGCHAIN_CALLBACKS_BACKGROUND !== \"true\"\n                : true\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\n","import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./base.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${run.inputs.input?.trim()}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${run.outputs?.output?.trim()}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    403,\n    404,\n    405,\n    406,\n    407,\n    408,\n    409, // Conflict\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const status = error?.response?.status;\n                if (status && STATUS_NO_RETRY.includes(+status)) {\n                    throw error;\n                }\n            },\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n","export function isLangChainMessage(message) {\n    return typeof message?._getType === \"function\";\n}\nexport function convertLangChainMessageToExample(message) {\n    const converted = {\n        type: message._getType(),\n        data: { content: message.content },\n    };\n    // Check for presence of keys in additional_kwargs\n    if (message?.additional_kwargs &&\n        Object.keys(message.additional_kwargs).length > 0) {\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\n    }\n    return converted;\n}\n","export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        const releaseEnv = getShas();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n            ...releaseEnv,\n        };\n    }\n    return runtimeEnvironment;\n}\n/**\n * Retrieves the LangChain-specific environment variables from the current runtime environment.\n * Sensitive keys (containing the word \"key\") have their values redacted for security.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific environment variables.\n */\nexport function getLangChainEnvVars() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if (key.startsWith(\"LANGCHAIN_\") && typeof value === \"string\") {\n            envVars[key] = value;\n        }\n    }\n    for (const key in envVars) {\n        if (key.toLowerCase().includes(\"key\") && typeof envVars[key] === \"string\") {\n            const value = envVars[key];\n            envVars[key] =\n                value.slice(0, 2) + \"*\".repeat(value.length - 4) + value.slice(-2);\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the environment variables from the current runtime environment.\n *\n * This function is designed to operate in a variety of JS environments,\n * including Node.js, Deno, browsers, etc.\n *\n * @returns {Record<string, string> | undefined}\n *  - A record of environment variables if available.\n *  - `undefined` if the environment does not support or allows access to environment variables.\n */\nexport function getEnvironmentVariables() {\n    try {\n        // Check for Node.js environment\n        // eslint-disable-next-line no-process-env\n        if (typeof process !== \"undefined\" && process.env) {\n            // eslint-disable-next-line no-process-env\n            Object.entries(process.env).reduce((acc, [key, value]) => {\n                acc[key] = String(value);\n                return acc;\n            }, {});\n        }\n        // For browsers and other environments, we may not have direct access to env variables\n        // Return undefined or any other fallback as required.\n        return undefined;\n    }\n    catch (e) {\n        // Catch any errors that might occur while trying to access environment variables\n        return undefined;\n    }\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n    if (cachedCommitSHAs !== undefined) {\n        return cachedCommitSHAs;\n    }\n    const common_release_envs = [\n        \"VERCEL_GIT_COMMIT_SHA\",\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n        \"COMMIT_REF\",\n        \"RENDER_GIT_COMMIT\",\n        \"CI_COMMIT_SHA\",\n        \"CIRCLE_SHA1\",\n        \"CF_PAGES_COMMIT_SHA\",\n        \"REACT_APP_GIT_SHA\",\n        \"SOURCE_VERSION\",\n        \"GITHUB_SHA\",\n        \"TRAVIS_COMMIT\",\n        \"GIT_COMMIT\",\n        \"BUILD_VCS_NUMBER\",\n        \"bamboo_planRepository_revision\",\n        \"Build.SourceVersion\",\n        \"BITBUCKET_COMMIT\",\n        \"DRONE_COMMIT_SHA\",\n        \"SEMAPHORE_GIT_SHA\",\n        \"BUILDKITE_COMMIT\",\n    ];\n    const shas = {};\n    for (const env of common_release_envs) {\n        const envVar = getEnvironmentVariable(env);\n        if (envVar !== undefined) {\n            shas[env] = envVar;\n        }\n    }\n    cachedCommitSHAs = shas;\n    return shas;\n}\n","import * as uuid from \"uuid\";\nimport { AsyncCaller } from \"./utils/async_caller.js\";\nimport { convertLangChainMessageToExample, isLangChainMessage, } from \"./utils/messages.js\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"./utils/env.js\";\n// utility functions\nconst isLocalhost = (url) => {\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\n};\nconst raiseForStatus = async (response, operation) => {\n    // consume the response body to release the connection\n    // https://undici.nodejs.org/#/?id=garbage-collection\n    const body = await response.text();\n    if (!response.ok) {\n        throw new Error(`Failed to ${operation}: ${response.status} ${response.statusText} ${body}`);\n    }\n};\nasync function toArray(iterable) {\n    const result = [];\n    for await (const item of iterable) {\n        result.push(item);\n    }\n    return result;\n}\nfunction trimQuotes(str) {\n    if (str === undefined) {\n        return undefined;\n    }\n    return str\n        .trim()\n        .replace(/^\"(.*)\"$/, \"$1\")\n        .replace(/^'(.*)'$/, \"$1\");\n}\nfunction hideInputs(inputs) {\n    if (getEnvironmentVariable(\"LANGCHAIN_HIDE_INPUTS\") === \"true\") {\n        return {};\n    }\n    return inputs;\n}\nfunction hideOutputs(outputs) {\n    if (getEnvironmentVariable(\"LANGCHAIN_HIDE_OUTPUTS\") === \"true\") {\n        return {};\n    }\n    return outputs;\n}\nfunction assertUuid(str) {\n    if (!uuid.validate(str)) {\n        throw new Error(`Invalid UUID: ${str}`);\n    }\n}\nexport class Client {\n    constructor(config = {}) {\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"webUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout_ms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tenantId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        const defaultConfig = Client.getDefaultClientConfig();\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\n        this.webUrl = trimQuotes(config.webUrl ?? defaultConfig.webUrl);\n        this.validateApiKeyIfHosted();\n        this.timeout_ms = config.timeout_ms ?? 4000;\n        this.caller = new AsyncCaller(config.callerOptions ?? {});\n    }\n    static getDefaultClientConfig() {\n        const apiKey = getEnvironmentVariable(\"LANGCHAIN_API_KEY\");\n        const apiUrl = getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ??\n            (apiKey ? \"https://api.smith.langchain.com\" : \"http://localhost:1984\");\n        return {\n            apiUrl: apiUrl,\n            apiKey: apiKey,\n            webUrl: undefined,\n        };\n    }\n    validateApiKeyIfHosted() {\n        const isLocal = isLocalhost(this.apiUrl);\n        if (!isLocal && !this.apiKey) {\n            throw new Error(\"API key must be provided when using hosted LangSmith API\");\n        }\n    }\n    getHostUrl() {\n        if (this.webUrl) {\n            return this.webUrl;\n        }\n        else if (isLocalhost(this.apiUrl)) {\n            this.webUrl = \"http://localhost\";\n            return \"http://localhost\";\n        }\n        else if (this.apiUrl.includes(\"/api\")) {\n            this.webUrl = this.apiUrl.replace(\"/api\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\n            this.webUrl = \"https://dev.smith.langchain.com\";\n            return \"https://dev.smith.langchain.com\";\n        }\n        else {\n            this.webUrl = \"https://smith.langchain.com\";\n            return \"https://smith.langchain.com\";\n        }\n    }\n    get headers() {\n        const headers = {};\n        if (this.apiKey) {\n            headers[\"x-api-key\"] = `${this.apiKey}`;\n        }\n        return headers;\n    }\n    async _getResponse(path, queryParams) {\n        const paramsString = queryParams?.toString() ?? \"\";\n        const url = `${this.apiUrl}${path}?${paramsString}`;\n        const response = await this.caller.call(fetch, url, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`);\n        }\n        return response;\n    }\n    async _get(path, queryParams) {\n        const response = await this._getResponse(path, queryParams);\n        return response.json();\n    }\n    async *_getPaginated(path, queryParams = new URLSearchParams()) {\n        let offset = Number(queryParams.get(\"offset\")) || 0;\n        const limit = Number(queryParams.get(\"limit\")) || 100;\n        while (true) {\n            queryParams.set(\"offset\", String(offset));\n            queryParams.set(\"limit\", String(limit));\n            const url = `${this.apiUrl}${path}?${queryParams}`;\n            const response = await this.caller.call(fetch, url, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`);\n            }\n            const items = await response.json();\n            if (items.length === 0) {\n                break;\n            }\n            yield items;\n            if (items.length < limit) {\n                break;\n            }\n            offset += items.length;\n        }\n    }\n    async *_getCursorPaginatedList(path, body = null, requestMethod = \"POST\", dataKey = \"runs\") {\n        let bodyParams = body ? { ...body } : {};\n        while (true) {\n            const response = await this.caller.call(fetch, `${this.apiUrl}${path}`, {\n                method: requestMethod,\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                body: JSON.stringify(bodyParams),\n            });\n            const responseBody = await response.json();\n            if (!responseBody) {\n                break;\n            }\n            if (!responseBody[dataKey]) {\n                break;\n            }\n            yield responseBody[dataKey];\n            const cursors = responseBody.cursors;\n            if (!cursors) {\n                break;\n            }\n            if (!cursors.next) {\n                break;\n            }\n            bodyParams.cursor = cursors.next;\n        }\n    }\n    async createRun(run) {\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const extra = run.extra ?? {};\n        const runtimeEnv = await getRuntimeEnvironment();\n        const session_name = run.project_name;\n        delete run.project_name;\n        const runCreate = {\n            session_name,\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: {\n                    ...runtimeEnv,\n                    ...extra.runtime,\n                },\n            },\n        };\n        runCreate.inputs = hideInputs(runCreate.inputs);\n        if (runCreate.outputs) {\n            runCreate.outputs = hideOutputs(runCreate.outputs);\n        }\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify(runCreate),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"create run\");\n    }\n    async updateRun(runId, run) {\n        assertUuid(runId);\n        if (run.inputs) {\n            run.inputs = hideInputs(run.inputs);\n        }\n        if (run.outputs) {\n            run.outputs = hideOutputs(run.outputs);\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}`, {\n            method: \"PATCH\",\n            headers,\n            body: JSON.stringify(run),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"update run\");\n    }\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\n        assertUuid(runId);\n        let run = await this._get(`/runs/${runId}`);\n        if (loadChildRuns && run.child_run_ids) {\n            run = await this._loadChildRuns(run);\n        }\n        return run;\n    }\n    async getRunUrl({ runId, run, projectOpts, }) {\n        if (run !== undefined) {\n            let sessionId;\n            if (run.session_id) {\n                sessionId = run.session_id;\n            }\n            else if (projectOpts?.projectName) {\n                sessionId = (await this.readProject({ projectName: projectOpts?.projectName })).id;\n            }\n            else if (projectOpts?.projectId) {\n                sessionId = projectOpts?.projectId;\n            }\n            else {\n                const project = await this.readProject({\n                    projectName: getEnvironmentVariable(\"LANGCHAIN_PROJECT\") || \"default\",\n                });\n                sessionId = project.id;\n            }\n            const tenantId = await this._getTenantId();\n            return `${this.getHostUrl()}/o/${tenantId}/projects/p/${sessionId}/r/${run.id}?poll=true`;\n        }\n        else if (runId !== undefined) {\n            const run_ = await this.readRun(runId);\n            if (!run_.app_path) {\n                throw new Error(`Run ${runId} has no app_path`);\n            }\n            const baseUrl = this.getHostUrl();\n            return `${baseUrl}${run_.app_path}`;\n        }\n        else {\n            throw new Error(\"Must provide either runId or run\");\n        }\n    }\n    async _loadChildRuns(run) {\n        const childRuns = await toArray(this.listRuns({ id: run.child_run_ids }));\n        const treemap = {};\n        const runs = {};\n        // TODO: make dotted order required when the migration finishes\n        childRuns.sort((a, b) => (a?.dotted_order ?? \"\").localeCompare(b?.dotted_order ?? \"\"));\n        for (const childRun of childRuns) {\n            if (childRun.parent_run_id === null ||\n                childRun.parent_run_id === undefined) {\n                throw new Error(`Child run ${childRun.id} has no parent`);\n            }\n            if (!(childRun.parent_run_id in treemap)) {\n                treemap[childRun.parent_run_id] = [];\n            }\n            treemap[childRun.parent_run_id].push(childRun);\n            runs[childRun.id] = childRun;\n        }\n        run.child_runs = treemap[run.id] || [];\n        for (const runId in treemap) {\n            if (runId !== run.id) {\n                runs[runId].child_runs = treemap[runId];\n            }\n        }\n        return run;\n    }\n    async *listRuns({ projectId, projectName, parentRunId, referenceExampleId, startTime, executionOrder, runType, error, id, query, filter, limit, }) {\n        let projectId_ = projectId;\n        if (projectName) {\n            if (projectId) {\n                throw new Error(\"Only one of projectId or projectName may be given\");\n            }\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        const body = {\n            session: projectId_ ? [projectId_] : null,\n            run_type: runType,\n            reference_example: referenceExampleId,\n            query,\n            filter,\n            execution_order: executionOrder,\n            parent_run: parentRunId ? [parentRunId] : null,\n            start_time: startTime ? startTime.toISOString() : null,\n            error,\n            id,\n            limit,\n        };\n        for await (const runs of this._getCursorPaginatedList(\"/runs/query\", body)) {\n            yield* runs;\n        }\n    }\n    async shareRun(runId, { shareId } = {}) {\n        const data = {\n            run_id: runId,\n            share_token: shareId || uuid.v4(),\n        };\n        assertUuid(runId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            throw new Error(\"Invalid response from server\");\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async unshareRun(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"unshare run\");\n    }\n    async readRunSharedLink(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            return undefined;\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async listSharedRuns(shareToken, { runIds, } = {}) {\n        const queryParams = new URLSearchParams({\n            share_token: shareToken,\n        });\n        if (runIds !== undefined) {\n            for (const runId of runIds) {\n                queryParams.append(\"id\", runId);\n            }\n        }\n        assertUuid(shareToken);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/public/${shareToken}/runs${queryParams}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const runs = await response.json();\n        return runs;\n    }\n    async readDatasetSharedSchema(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async shareDataset(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        const data = {\n            dataset_id: datasetId,\n        };\n        assertUuid(datasetId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async unshareDataset(datasetId) {\n        assertUuid(datasetId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"unshare dataset\");\n    }\n    async readSharedDataset(shareToken) {\n        assertUuid(shareToken);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/public/${shareToken}/datasets`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const dataset = await response.json();\n        return dataset;\n    }\n    async createProject({ projectName, description = null, metadata = null, upsert = false, projectExtra = null, referenceDatasetId = null, }) {\n        const upsert_ = upsert ? `?upsert=true` : \"\";\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\n        const extra = projectExtra || {};\n        if (metadata) {\n            extra[\"metadata\"] = metadata;\n        }\n        const body = {\n            name: projectName,\n            extra,\n            description,\n        };\n        if (referenceDatasetId !== null) {\n            body[\"reference_dataset_id\"] = referenceDatasetId;\n        }\n        const response = await this.caller.call(fetch, endpoint, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            throw new Error(`Failed to create session ${projectName}: ${response.status} ${response.statusText}`);\n        }\n        return result;\n    }\n    async updateProject(projectId, { name = null, description = null, metadata = null, projectExtra = null, endTime = null, }) {\n        const endpoint = `${this.apiUrl}/sessions/${projectId}`;\n        let extra = projectExtra;\n        if (metadata) {\n            extra = { ...(extra || {}), metadata };\n        }\n        const body = {\n            name,\n            extra,\n            description,\n            end_time: endTime ? new Date(endTime).toISOString() : null,\n        };\n        const response = await this.caller.call(fetch, endpoint, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            throw new Error(`Failed to update project ${projectId}: ${response.status} ${response.statusText}`);\n        }\n        return result;\n    }\n    async readProject({ projectId, projectName, }) {\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async _getTenantId() {\n        if (this._tenantId !== null) {\n            return this._tenantId;\n        }\n        const queryParams = new URLSearchParams({ limit: \"1\" });\n        for await (const projects of this._getPaginated(\"/sessions\", queryParams)) {\n            this._tenantId = projects[0].tenant_id;\n            return projects[0].tenant_id;\n        }\n        throw new Error(\"No projects found to resolve tenant.\");\n    }\n    async *listProjects({ projectIds, name, nameContains, referenceDatasetId, referenceDatasetName, referenceFree, } = {}) {\n        const params = new URLSearchParams();\n        if (projectIds !== undefined) {\n            for (const projectId of projectIds) {\n                params.append(\"id\", projectId);\n            }\n        }\n        if (name !== undefined) {\n            params.append(\"name\", name);\n        }\n        if (nameContains !== undefined) {\n            params.append(\"name_contains\", nameContains);\n        }\n        if (referenceDatasetId !== undefined) {\n            params.append(\"reference_dataset\", referenceDatasetId);\n        }\n        else if (referenceDatasetName !== undefined) {\n            const dataset = await this.readDataset({\n                datasetName: referenceDatasetName,\n            });\n            params.append(\"reference_dataset\", dataset.id);\n        }\n        if (referenceFree !== undefined) {\n            params.append(\"reference_free\", referenceFree.toString());\n        }\n        for await (const projects of this._getPaginated(\"/sessions\", params)) {\n            yield* projects;\n        }\n    }\n    async deleteProject({ projectId, projectName, }) {\n        let projectId_;\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        else if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId === undefined) {\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        else {\n            projectId_ = projectId;\n        }\n        assertUuid(projectId_);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/sessions/${projectId_}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, `delete session ${projectId_} (${projectName})`);\n    }\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\n        const url = `${this.apiUrl}/datasets/upload`;\n        const formData = new FormData();\n        formData.append(\"file\", csvFile, fileName);\n        inputKeys.forEach((key) => {\n            formData.append(\"input_keys\", key);\n        });\n        outputKeys.forEach((key) => {\n            formData.append(\"output_keys\", key);\n        });\n        if (description) {\n            formData.append(\"description\", description);\n        }\n        if (dataType) {\n            formData.append(\"data_type\", dataType);\n        }\n        if (name) {\n            formData.append(\"name\", name);\n        }\n        const response = await this.caller.call(fetch, url, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            const result = await response.json();\n            if (result.detail && result.detail.includes(\"already exists\")) {\n                throw new Error(`Dataset ${fileName} already exists`);\n            }\n            throw new Error(`Failed to upload CSV: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async createDataset(name, { description, dataType, } = {}) {\n        const body = {\n            name,\n            description,\n        };\n        if (dataType) {\n            body.data_type = dataType;\n        }\n        const response = await this.caller.call(fetch, `${this.apiUrl}/datasets`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            const result = await response.json();\n            if (result.detail && result.detail.includes(\"already exists\")) {\n                throw new Error(`Dataset ${name} already exists`);\n            }\n            throw new Error(`Failed to create dataset ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async readDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        // limit to 1 result\n        const params = new URLSearchParams({ limit: \"1\" });\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            assertUuid(datasetId);\n            path += `/${datasetId}`;\n        }\n        else if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async readDatasetOpenaiFinetuning({ datasetId, datasetName, }) {\n        const path = \"/datasets\";\n        if (datasetId !== undefined) {\n            // do nothing\n        }\n        else if (datasetName !== undefined) {\n            datasetId = (await this.readDataset({ datasetName })).id;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._getResponse(`${path}/${datasetId}/openai_ft`);\n        const datasetText = await response.text();\n        const dataset = datasetText\n            .trim()\n            .split(\"\\n\")\n            .map((line) => JSON.parse(line));\n        return dataset;\n    }\n    async *listDatasets({ limit = 100, offset = 0, datasetIds, datasetName, datasetNameContains, } = {}) {\n        const path = \"/datasets\";\n        const params = new URLSearchParams({\n            limit: limit.toString(),\n            offset: offset.toString(),\n        });\n        if (datasetIds !== undefined) {\n            for (const id_ of datasetIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        if (datasetNameContains !== undefined) {\n            params.append(\"name_contains\", datasetNameContains);\n        }\n        for await (const datasets of this._getPaginated(path, params)) {\n            yield* datasets;\n        }\n    }\n    async deleteDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        let datasetId_ = datasetId;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        if (datasetId_ !== undefined) {\n            assertUuid(datasetId_);\n            path += `/${datasetId_}`;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\n        }\n        await response.json();\n    }\n    async createExample(inputs, outputs, { datasetId, datasetName, createdAt, exampleId }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const createdAt_ = createdAt || new Date();\n        const data = {\n            dataset_id: datasetId_,\n            inputs,\n            outputs,\n            created_at: createdAt_.toISOString(),\n            id: exampleId,\n        };\n        const response = await this.caller.call(fetch, `${this.apiUrl}/examples`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to create example: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async createLLMExample(input, generation, options) {\n        return this.createExample({ input }, { output: generation }, options);\n    }\n    async createChatExample(input, generations, options) {\n        const finalInput = input.map((message) => {\n            if (isLangChainMessage(message)) {\n                return convertLangChainMessageToExample(message);\n            }\n            return message;\n        });\n        const finalOutput = isLangChainMessage(generations)\n            ? convertLangChainMessageToExample(generations)\n            : generations;\n        return this.createExample({ input: finalInput }, { output: finalOutput }, options);\n    }\n    async readExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        return await this._get(path);\n    }\n    async *listExamples({ datasetId, datasetName, exampleIds, } = {}) {\n        let datasetId_;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            datasetId_ = datasetId;\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            throw new Error(\"Must provide a datasetName or datasetId\");\n        }\n        const params = new URLSearchParams({ dataset: datasetId_ });\n        if (exampleIds !== undefined) {\n            for (const id_ of exampleIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        for await (const examples of this._getPaginated(\"/examples\", params)) {\n            yield* examples;\n        }\n    }\n    async deleteExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\n        }\n        await response.json();\n    }\n    async updateExample(exampleId, update) {\n        assertUuid(exampleId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/examples/${exampleId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to update example ${exampleId}: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, } = { loadChildRuns: false }) {\n        let run_;\n        if (typeof run === \"string\") {\n            run_ = await this.readRun(run, { loadChildRuns });\n        }\n        else if (typeof run === \"object\" && \"id\" in run) {\n            run_ = run;\n        }\n        else {\n            throw new Error(`Invalid run type: ${typeof run}`);\n        }\n        let referenceExample = undefined;\n        if (run_.reference_example_id !== null &&\n            run_.reference_example_id !== undefined) {\n            referenceExample = await this.readExample(run_.reference_example_id);\n        }\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\n        let sourceInfo_ = sourceInfo ?? {};\n        if (feedbackResult.evaluatorInfo) {\n            sourceInfo_ = { ...sourceInfo_, ...feedbackResult.evaluatorInfo };\n        }\n        return await this.createFeedback(run_.id, feedbackResult.key, {\n            score: feedbackResult.score,\n            value: feedbackResult.value,\n            comment: feedbackResult.comment,\n            correction: feedbackResult.correction,\n            sourceInfo: sourceInfo_,\n            feedbackSourceType: \"model\",\n        });\n    }\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"api\", sourceRunId, feedbackId, eager = false, }) {\n        const feedback_source = {\n            type: feedbackSourceType ?? \"api\",\n            metadata: sourceInfo ?? {},\n        };\n        if (sourceRunId !== undefined &&\n            feedback_source?.metadata !== undefined &&\n            !feedback_source.metadata[\"__run\"]) {\n            feedback_source.metadata[\"__run\"] = { run_id: sourceRunId };\n        }\n        if (feedback_source?.metadata !== undefined &&\n            feedback_source.metadata[\"__run\"]?.run_id !== undefined) {\n            assertUuid(feedback_source.metadata[\"__run\"].run_id);\n        }\n        const feedback = {\n            id: feedbackId ?? uuid.v4(),\n            run_id: runId,\n            key,\n            score,\n            value,\n            correction,\n            comment,\n            feedback_source: feedback_source,\n        };\n        const url = `${this.apiUrl}/feedback` + (eager ? \"/eager\" : \"\");\n        const response = await this.caller.call(fetch, url, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedback),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"create feedback\");\n        return feedback;\n    }\n    async updateFeedback(feedbackId, { score, value, correction, comment, }) {\n        const feedbackUpdate = {};\n        if (score !== undefined && score !== null) {\n            feedbackUpdate[\"score\"] = score;\n        }\n        if (value !== undefined && value !== null) {\n            feedbackUpdate[\"value\"] = value;\n        }\n        if (correction !== undefined && correction !== null) {\n            feedbackUpdate[\"correction\"] = correction;\n        }\n        if (comment !== undefined && comment !== null) {\n            feedbackUpdate[\"comment\"] = comment;\n        }\n        assertUuid(feedbackId);\n        const response = await this.caller.call(fetch, `${this.apiUrl}/feedback/${feedbackId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedbackUpdate),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"update feedback\");\n    }\n    async readFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this._get(path);\n        return response;\n    }\n    async deleteFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\n        }\n        await response.json();\n    }\n    async *listFeedback({ runIds, feedbackKeys, feedbackSourceTypes, } = {}) {\n        const queryParams = new URLSearchParams();\n        if (runIds) {\n            queryParams.append(\"run\", runIds.join(\",\"));\n        }\n        if (feedbackKeys) {\n            for (const key of feedbackKeys) {\n                queryParams.append(\"key\", key);\n            }\n        }\n        if (feedbackSourceTypes) {\n            for (const type of feedbackSourceTypes) {\n                queryParams.append(\"source\", type);\n            }\n        }\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\n            yield* feedbacks;\n        }\n    }\n}\n","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n","import { Client } from \"langsmith\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"../utils/env.js\";\nimport { BaseTracer } from \"./base.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { exampleId, projectName, client } = fields;\n        this.projectName =\n            projectName ??\n                getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n        this.exampleId = exampleId;\n        this.client = client ?? new Client({});\n    }\n    async _convertToCreate(run, example_id = undefined) {\n        return {\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: await getRuntimeEnvironment(),\n            },\n            child_runs: undefined,\n            session_name: this.projectName,\n            reference_example_id: run.parent_run_id ? undefined : example_id,\n        };\n    }\n    async persistRun(_run) { }\n    async _persistRunSingle(run) {\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\n        await this.client.createRun(persistedRun);\n    }\n    async _updateRunSingle(run) {\n        const runUpdate = {\n            end_time: run.end_time,\n            error: run.error,\n            outputs: run.outputs,\n            events: run.events,\n            inputs: run.inputs,\n        };\n        await this.client.updateRun(run.id, runUpdate);\n    }\n    async onRetrieverStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onRetrieverEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onRetrieverError(run) {\n        await this._updateRunSingle(run);\n    }\n    async onLLMStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onLLMEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onLLMError(run) {\n        await this._updateRunSingle(run);\n    }\n    async onChainStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onChainEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onChainError(run) {\n        await this._updateRunSingle(run);\n    }\n    async onToolStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onToolEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onToolError(run) {\n        await this._updateRunSingle(run);\n    }\n}\n","import PQueueMod from \"p-queue\";\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promise Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        await promiseFn();\n    }\n    else {\n        if (typeof queue === \"undefined\") {\n            queue = createQueue();\n        }\n        void queue.add(promiseFn);\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport function awaitAllCallbacks() {\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { getTracingV2CallbackHandler } from \"../tracers/initialize.js\";\nimport { getBufferString } from \"../messages/index.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer, } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nclass BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    async handleLLMStart(llm, prompts, _runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, _runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = getEnvironmentVariable(\"LANGCHAIN_TRACING_V2\") === \"true\";\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    callbackManager.addHandler(await getTracingV2CallbackHandler(), true);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nfunction ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(`What is the answer to {question}?`);\n *\n * // Example of using LLMChain to process a series of questions\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Process questions using the chain\n * const processQuestions = async (questions) => {\n *   for (const question of questions) {\n *     const result = await chain.call({ question });\n *     console.log(result);\n *   }\n * };\n *\n * // Example questions\n * const questions = [\n *   \"What is your name?\",\n *   \"What is your quest?\",\n *   \"What is your favorite color?\",\n * ];\n *\n * // Run the example\n * processQuestions(questions).catch(console.error);\n *\n * ```\n */\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n","import { LangChainTracer } from \"./tracer_langchain.js\";\nimport { LangChainTracerV1 } from \"./tracer_langchain_v1.js\";\n/**\n * @deprecated Use the V2 handler instead.\n *\n * Function that returns an instance of `LangChainTracerV1`. If a session\n * is provided, it loads that session into the tracer; otherwise, it loads\n * a default session.\n * @param session Optional session to load into the tracer.\n * @returns An instance of `LangChainTracerV1`.\n */\nexport async function getTracingCallbackHandler(session) {\n    const tracer = new LangChainTracerV1();\n    if (session) {\n        await tracer.loadSession(session);\n    }\n    else {\n        await tracer.loadDefaultSession();\n    }\n    return tracer;\n}\n/**\n * Function that returns an instance of `LangChainTracer`. It does not\n * load any session data.\n * @returns An instance of `LangChainTracer`.\n */\nexport async function getTracingV2CallbackHandler() {\n    return new LangChainTracer();\n}\n","import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n","import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nexport class Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lc_kwargs = kwargs || {};\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n","import { Serializable } from \"../load/serializable.js\";\nfunction mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return [...firstContent, ...secondContent];\n        // If the first content is a list and second is a string\n    }\n    else {\n        // Otherwise, add the second content as a new element of the list\n        return [...firstContent, { type: \"text\", text: secondContent }];\n    }\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport class BaseMessage extends Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return { additional_kwargs: \"additional_kwargs\" };\n    }\n    /**\n     * @deprecated\n     * Use {@link BaseMessage.content} instead.\n     */\n    get text() {\n        return typeof this.content === \"string\" ? this.content : \"\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = { content: fields, additional_kwargs: kwargs };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n    toChunk() {\n        const type = this._getType();\n        if (type === \"human\") {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return new HumanMessageChunk({ ...this });\n        }\n        else if (type === \"ai\") {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return new AIMessageChunk({ ...this });\n        }\n        else if (type === \"system\") {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return new SystemMessageChunk({ ...this });\n        }\n        else if (type === \"function\") {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return new FunctionMessageChunk({ ...this });\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        }\n        else if (ChatMessage.isInstance(this)) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return new ChatMessageChunk({ ...this });\n        }\n        else {\n            throw new Error(\"Unknown message type.\");\n        }\n    }\n}\nfunction isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport class BaseMessageChunk extends BaseMessage {\n    static _mergeAdditionalKwargs(left, right) {\n        const merged = { ...left };\n        for (const [key, value] of Object.entries(right)) {\n            if (merged[key] === undefined) {\n                merged[key] = value;\n            }\n            else if (typeof merged[key] !== typeof value) {\n                throw new Error(`additional_kwargs[${key}] already exists in the message chunk, but with a different type.`);\n            }\n            else if (typeof merged[key] === \"string\") {\n                merged[key] = merged[key] + value;\n            }\n            else if (!Array.isArray(merged[key]) &&\n                typeof merged[key] === \"object\") {\n                merged[key] = this._mergeAdditionalKwargs(merged[key], value);\n            }\n            else if (key === \"tool_calls\" &&\n                isOpenAIToolCallArray(merged[key]) &&\n                isOpenAIToolCallArray(value)) {\n                for (const toolCall of value) {\n                    if (merged[key]?.[toolCall.index] !== undefined) {\n                        merged[key] = merged[key]?.map((value, i) => {\n                            if (i !== toolCall.index) {\n                                return value;\n                            }\n                            return {\n                                ...value,\n                                ...toolCall,\n                                function: {\n                                    name: toolCall.function.name ?? value.function.name,\n                                    arguments: (value.function.arguments ?? \"\") +\n                                        (toolCall.function.arguments ?? \"\"),\n                                },\n                            };\n                        });\n                    }\n                    else {\n                        merged[key][toolCall.index] = toolCall;\n                    }\n                }\n            }\n            else {\n                throw new Error(`additional_kwargs[${key}] already exists in this message chunk.`);\n            }\n        }\n        return merged;\n    }\n}\n/**\n * Represents a human message in a conversation.\n */\nexport class HumanMessage extends BaseMessage {\n    static lc_name() {\n        return \"HumanMessage\";\n    }\n    _getType() {\n        return \"human\";\n    }\n}\n/**\n * Represents a chunk of a human message, which can be concatenated with\n * other human message chunks.\n */\nexport class HumanMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"HumanMessageChunk\";\n    }\n    _getType() {\n        return \"human\";\n    }\n    concat(chunk) {\n        return new HumanMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: HumanMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\n        });\n    }\n}\n/**\n * Represents an AI message in a conversation.\n */\nexport class AIMessage extends BaseMessage {\n    static lc_name() {\n        return \"AIMessage\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n}\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nexport class AIMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"AIMessageChunk\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    concat(chunk) {\n        return new AIMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: AIMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\n        });\n    }\n}\n/**\n * Represents a system message in a conversation.\n */\nexport class SystemMessage extends BaseMessage {\n    static lc_name() {\n        return \"SystemMessage\";\n    }\n    _getType() {\n        return \"system\";\n    }\n}\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nexport class SystemMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"SystemMessageChunk\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    concat(chunk) {\n        return new SystemMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: SystemMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\n        });\n    }\n}\n/**\n * Represents a function message in a conversation.\n */\nexport class FunctionMessage extends BaseMessage {\n    static lc_name() {\n        return \"FunctionMessage\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name: name };\n        }\n        super(fields);\n    }\n    _getType() {\n        return \"function\";\n    }\n}\n/**\n * Represents a chunk of a function message, which can be concatenated\n * with other function message chunks.\n */\nexport class FunctionMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"FunctionMessageChunk\";\n    }\n    _getType() {\n        return \"function\";\n    }\n    concat(chunk) {\n        return new FunctionMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: FunctionMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\n            name: this.name ?? \"\",\n        });\n    }\n}\n/**\n * Represents a tool message in a conversation.\n */\nexport class ToolMessage extends BaseMessage {\n    static lc_name() {\n        return \"ToolMessage\";\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return { tool_call_id: \"tool_call_id\" };\n    }\n    constructor(fields, tool_call_id, name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name, tool_call_id: tool_call_id };\n        }\n        super(fields);\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n    }\n    _getType() {\n        return \"tool\";\n    }\n}\n/**\n * Represents a chunk of a tool message, which can be concatenated\n * with other tool message chunks.\n */\nexport class ToolMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n    }\n    static lc_name() {\n        return \"ToolMessageChunk\";\n    }\n    _getType() {\n        return \"tool\";\n    }\n    concat(chunk) {\n        return new ToolMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: ToolMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\n            tool_call_id: this.tool_call_id,\n        });\n    }\n}\n/**\n * Represents a chat message in a conversation.\n */\nexport class ChatMessage extends BaseMessage {\n    static lc_name() {\n        return \"ChatMessage\";\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"generic\";\n    }\n}\nexport function isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nexport function isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\nexport function coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new HumanMessage(messageLike);\n    }\n    else if (isBaseMessage(messageLike)) {\n        return messageLike;\n    }\n    const [type, content] = messageLike;\n    if (type === \"human\" || type === \"user\") {\n        return new HumanMessage({ content });\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        return new AIMessage({ content });\n    }\n    else if (type === \"system\") {\n        return new SystemMessage({ content });\n    }\n    else {\n        throw new Error(`Unable to coerce message from array: only human, AI, or system message coercion is currently supported.`);\n    }\n}\n/**\n * Represents a chunk of a chat message, which can be concatenated with\n * other chat message chunks.\n */\nexport class ChatMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"ChatMessageChunk\";\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    concat(chunk) {\n        return new ChatMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: ChatMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\n            role: this.role,\n        });\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        string_messages.push(`${role}: ${nameStr}${m.content}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nexport function mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new AIMessage(storedMessage.data);\n        case \"system\":\n            return new SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new ToolMessage(storedMessage.data);\n        case \"chat\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\n","import { Serializable } from \"./load/serializable.js\";\nimport { HumanMessage, getBufferString, } from \"./messages/index.js\";\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nexport class BasePromptValue extends Serializable {\n}\n/**\n * Represents a prompt value as a string. It extends the BasePromptValue\n * class and overrides the toString and toChatMessages methods.\n */\nexport class StringPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"StringPromptValue\";\n    }\n    constructor(value) {\n        super({ value });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    toChatMessages() {\n        return [new HumanMessage(this.value)];\n    }\n}\n/**\n * Class that represents a chat prompt value. It extends the\n * BasePromptValue and includes an array of BaseMessage instances.\n */\nexport class ChatPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ChatPromptValue\";\n    }\n    constructor(fields) {\n        if (Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { messages: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.messages = fields.messages;\n    }\n    toString() {\n        return getBufferString(this.messages);\n    }\n    toChatMessages() {\n        return this.messages;\n    }\n}\n","/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport class IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.reader.releaseLock(); // release lock when stream becomes closed\n                return {\n                    done: true,\n                    value: undefined,\n                };\n            }\n            else {\n                return {\n                    done: false,\n                    value: result.value,\n                };\n            }\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        // If wrapped in a Node stream, cancel is already called.\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        return { done: true, value: undefined };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async throw(e) {\n        this.ensureReader();\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        throw e;\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n            cancel() {\n                reader.releaseLock();\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                    controller.close();\n                }\n                // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n                controller.enqueue(value);\n            },\n        });\n    }\n}\nexport function atee(iter, length = 2) {\n    const buffers = Array.from({ length }, () => []);\n    return buffers.map(async function* makeIter(buffer) {\n        while (true) {\n            if (buffer.length === 0) {\n                const result = await iter.next();\n                for (const buffer of buffers) {\n                    buffer.push(result);\n                }\n            }\n            else if (buffer[0].done) {\n                return;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield buffer.shift().value;\n            }\n        }\n    });\n}\nexport function concat(first, second) {\n    if (Array.isArray(first) && Array.isArray(second)) {\n        return first.concat(second);\n    }\n    else if (typeof first === \"string\" && typeof second === \"string\") {\n        return (first + second);\n    }\n    else if (typeof first === \"number\" && typeof second === \"number\") {\n        return (first + second);\n    }\n    else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in first &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof first.concat === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return first.concat(second);\n    }\n    else if (typeof first === \"object\" && typeof second === \"object\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const chunk = { ...first };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (const [key, value] of Object.entries(second)) {\n            if (key in chunk) {\n                chunk[key] = concat(chunk[key], value);\n            }\n            else {\n                chunk[key] = value;\n            }\n        }\n        return chunk;\n    }\n    else {\n        throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n    }\n}\nexport class AsyncGeneratorWithSetup {\n    constructor(generator, startSetup) {\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResult\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResultUsed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.generator = generator;\n        // setup is a promise that resolves only after the first iterator value\n        // is available. this is useful when setup of several piped generators\n        // needs to happen in logical order, ie. in the order in which input to\n        // to each generator is available.\n        this.setup = new Promise((resolve, reject) => {\n            this.firstResult = generator.next();\n            this.firstResult.then(startSetup).then(resolve, reject);\n        });\n    }\n    async next(...args) {\n        if (!this.firstResultUsed) {\n            this.firstResultUsed = true;\n            return this.firstResult;\n        }\n        return this.generator.next(...args);\n    }\n    async return(value) {\n        return this.generator.return(value);\n    }\n    async throw(e) {\n        return this.generator.throw(e);\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport async function pipeGeneratorWithSetup(to, generator, startSetup, ...args) {\n    const gen = new AsyncGeneratorWithSetup(generator, startSetup);\n    const setup = await gen.setup;\n    return { output: to(gen, setup, ...args), setup };\n}\n","import { applyPatch, } from \"../utils/fast-json-patch/index.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nexport class RunLogPatch {\n    constructor(fields) {\n        Object.defineProperty(this, \"ops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.ops = fields.ops;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch({}, ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport class RunLog extends RunLogPatch {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.state = fields.state;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch(this.state, other.ops);\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\n    }\n}\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class LogStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyMapByRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"counterMapByRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"log_stream_tracer\"\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        if (run.parent_run_id === undefined) {\n            return false;\n        }\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.run_type);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.run_type);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async onRunCreate(run) {\n        if (run.parent_run_id === undefined) {\n            await this.writer.write(new RunLogPatch({\n                ops: [\n                    {\n                        op: \"replace\",\n                        path: \"\",\n                        value: {\n                            id: run.id,\n                            streamed_output: [],\n                            final_output: undefined,\n                            logs: {},\n                        },\n                    },\n                ],\n            }));\n        }\n        if (!this._includeRun(run)) {\n            return;\n        }\n        if (this.counterMapByRunName[run.name] === undefined) {\n            this.counterMapByRunName[run.name] = 0;\n        }\n        this.counterMapByRunName[run.name] += 1;\n        const count = this.counterMapByRunName[run.name];\n        this.keyMapByRunId[run.id] =\n            count === 1 ? run.name : `${run.name}:${count}`;\n        const logEntry = {\n            id: run.id,\n            name: run.name,\n            type: run.run_type,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            start_time: new Date(run.start_time).toISOString(),\n            streamed_output_str: [],\n            final_output: undefined,\n            end_time: undefined,\n        };\n        await this.writer.write(new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${this.keyMapByRunId[run.id]}`,\n                    value: logEntry,\n                },\n            ],\n        }));\n    }\n    async onRunUpdate(run) {\n        try {\n            const runName = this.keyMapByRunId[run.id];\n            if (runName === undefined) {\n                return;\n            }\n            const ops = [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/final_output`,\n                    value: run.outputs,\n                },\n            ];\n            if (run.end_time !== undefined) {\n                ops.push({\n                    op: \"add\",\n                    path: `/logs/${runName}/end_time`,\n                    value: new Date(run.end_time).toISOString(),\n                });\n            }\n            const patch = new RunLogPatch({ ops });\n            await this.writer.write(patch);\n        }\n        finally {\n            if (run.parent_run_id === undefined) {\n                const patch = new RunLogPatch({\n                    ops: [\n                        {\n                            op: \"replace\",\n                            path: \"/final_output\",\n                            value: run.outputs,\n                        },\n                    ],\n                });\n                await this.writer.write(patch);\n                if (this.autoClose) {\n                    await this.writer.close();\n                }\n            }\n        }\n    }\n    async onLLMNewToken(run, token) {\n        const runName = this.keyMapByRunId[run.id];\n        if (runName === undefined) {\n            return;\n        }\n        const patch = new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output_str/-`,\n                    value: token,\n                },\n            ],\n        });\n        await this.writer.write(patch);\n    }\n}\n","import { BaseTracer } from \"./base.js\";\nexport class RootListenersTracer extends BaseTracer {\n    constructor({ config, onStart, onEnd, onError, }) {\n        super();\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RootListenersTracer\"\n        });\n        /** The Run's ID. Type UUID */\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnStart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnEnd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.config = config;\n        this.argOnStart = onStart;\n        this.argOnEnd = onEnd;\n        this.argOnError = onError;\n    }\n    /**\n     * This is a legacy method only called once for an entire run tree\n     * therefore not useful here\n     * @param {Run} _ Not used\n     */\n    persistRun(_) {\n        return Promise.resolve();\n    }\n    async onRunCreate(run) {\n        if (this.rootId) {\n            return;\n        }\n        this.rootId = run.id;\n        if (this.argOnStart) {\n            if (this.argOnStart.length === 1) {\n                await this.argOnStart(run);\n            }\n            else if (this.argOnStart.length === 2) {\n                await this.argOnStart(run, this.config);\n            }\n        }\n    }\n    async onRunUpdate(run) {\n        if (run.id !== this.rootId) {\n            return;\n        }\n        if (!run.error) {\n            if (this.argOnEnd) {\n                if (this.argOnEnd.length === 1) {\n                    await this.argOnEnd(run);\n                }\n                else if (this.argOnEnd.length === 2) {\n                    await this.argOnEnd(run, this.config);\n                }\n            }\n        }\n        else if (this.argOnError) {\n            if (this.argOnError.length === 1) {\n                await this.argOnError(run);\n            }\n            else if (this.argOnError.length === 2) {\n                await this.argOnError(run, this.config);\n            }\n        }\n    }\n}\n","import pRetry from \"p-retry\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nimport { LogStreamCallbackHandler, RunLogPatch, } from \"../tracers/log_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { IterableReadableStream, concat, atee, pipeGeneratorWithSetup, } from \"../utils/stream.js\";\nimport { DEFAULT_RECURSION_LIMIT, getCallbackManagerForConfig, mergeConfigs, } from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport class Runnable extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param kwargs\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks: fields.fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options)) {\n            if (options.length !== length) {\n                throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n            }\n            return options;\n        }\n        return Array.from({ length }, () => options);\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const caller = new AsyncCaller({\n            maxConcurrency: batchOptions?.maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        return IterableReadableStream.fromAsyncGenerator(this._streamIterator(input, options));\n    }\n    _separateRunnableConfigFromCallOptions(options = {}) {\n        const runnableConfig = {\n            callbacks: options.callbacks,\n            tags: options.tags,\n            metadata: options.metadata,\n            runName: options.runName,\n            configurable: options.configurable,\n        };\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), undefined, options?.runType, undefined, undefined, options?.runName ?? this.getName());\n        let output;\n        try {\n            output = await func.bind(this)(input, options, runManager);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map((callbackManager, i) => callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), undefined, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName())));\n        let outputs;\n        try {\n            outputs = await func(inputs, optionsList, runManagers, batchOptions);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalInput = concat(finalInput, chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await pipeGeneratorWithSetup(transformer, wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, undefined, options?.runType, undefined, undefined, options?.runName ?? this.getName()), options);\n            runManager = pipe.setup;\n            for await (const chunk of pipe.output) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    _patchConfig(config = {}, callbackManager = undefined, recursionLimit = undefined) {\n        const newConfig = { ...config };\n        if (callbackManager !== undefined) {\n            /**\n             * If we're replacing callbacks we need to unset runName\n             * since that should apply only to the same run as the original callbacks\n             */\n            delete newConfig.runName;\n            return { ...newConfig, callbacks: callbackManager };\n        }\n        if (recursionLimit !== undefined) {\n            newConfig.recursionLimit = recursionLimit;\n        }\n        return newConfig;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = concat(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, options);\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const stream = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n        });\n        const config = options ?? {};\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            config.callbacks = [stream];\n        }\n        else if (Array.isArray(callbacks)) {\n            config.callbacks = callbacks.concat([stream]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.inheritableHandlers.push(stream);\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStream = await this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                for await (const chunk of runnableStream) {\n                    const patch = new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await stream.writer.write(patch);\n                }\n            }\n            finally {\n                await stream.writer.close();\n            }\n        }\n        const runnableStreamPromise = consumeRunnableStream();\n        try {\n            for await (const log of stream) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamPromise;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return thing ? thing.lc_runnable : false;\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable with a set of kwargs.\n */\nexport class RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    options) {\n        const config = mergeConfigs(this.config, options);\n        return mergeConfigs(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound.withRetry(fields),\n            kwargs: this.kwargs,\n            config: this.config,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig({ ...options, ...this.kwargs }));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig({\n                ...individualOption,\n                ...this.kwargs,\n            })))\n            : await this._mergeConfig({ ...options, ...this.kwargs });\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig({ ...options, ...this.kwargs }));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig({ ...options, ...this.kwargs }));\n    }\n    async *transform(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig({ ...options, ...this.kwargs }));\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n */\nexport class RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param args The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke, inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, this._patchConfig(config, runManager?.getChild()));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n */\nexport class RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return this._patchConfig(config, runManager?.getChild(tag));\n    }\n    async _invoke(input, config, runManager) {\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke, input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await pRetry(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                onFailedAttempt: this.onFailedAttempt,\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({})]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), undefined, undefined, undefined, undefined, options?.runName);\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                nextStepInput = await step.invoke(nextStepInput, this._patchConfig(options, runManager?.getChild(`seq:step:${i + 1}`)));\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            finalOutput = await this.last.invoke(nextStepInput, this._patchConfig(options, runManager?.getChild(`seq:step:${this.steps.length}`)));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map((callbackManager, i) => callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), undefined, undefined, undefined, undefined, configList[i].runName)));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        let finalOutputs;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                nextStepInputs = await step.batch(nextStepInputs, runManagers.map((runManager, j) => this._patchConfig(configList[j], runManager?.getChild(`seq:step:${i + 1}`))), batchOptions);\n            }\n            finalOutputs = await this.last.batch(nextStepInputs, runManagers.map((runManager) => this._patchConfig(configList[this.steps.length - 1], runManager?.getChild(`seq:step:${this.steps.length}`))), batchOptions);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(finalOutputs[i], \"output\"))));\n        return finalOutputs;\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), undefined, undefined, undefined, undefined, options?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), this._patchConfig(options, runManager?.getChild(`seq:step:1`)));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, this._patchConfig(options, runManager?.getChild(`seq:step:${i + 1}`)));\n            }\n            for await (const chunk of finalGenerator) {\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], name) {\n        return new RunnableSequence({\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n            name,\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, undefined, undefined, undefined, undefined, options?.runName);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            await Promise.all(Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, this._patchConfig(options, runManager?.getChild(`map:key:${key}`)));\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = atee(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], this._patchConfig(options, runManager?.getChild(`map:key:${key}`)));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const { key, result, gen } = await Promise.race(tasks.values());\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        return IterableReadableStream.fromAsyncGenerator(this.transform(generator(), options));\n    }\n}\n/**\n * A runnable that runs a callable.\n */\nexport class RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        let output = await this.func(input, { config });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            output = await output.invoke(input, this._patchConfig(config, runManager?.getChild(), (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1));\n        }\n        return output;\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke, input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = concat(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const output = await this.func(finalChunk, { config });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, this._patchConfig(config, runManager?.getChild(), (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1));\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        return IterableReadableStream.fromAsyncGenerator(this.transform(generator(), options));\n    }\n}\nexport class RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n */\nexport class RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const callbackManager_ = await CallbackManager.configure(options?.callbacks, undefined, options?.tags, undefined, options?.metadata);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), undefined, undefined, undefined, undefined, options?.runName);\n        let firstError;\n        for (const runnable of this.runnables()) {\n            try {\n                const output = await runnable.invoke(input, this._patchConfig(options, runManager?.getChild()));\n                await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                return output;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (firstError === undefined) {\n            throw new Error(\"No error stored at end of fallback.\");\n        }\n        await runManager?.handleChainError(firstError);\n        throw firstError;\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => CallbackManager.configure(config?.callbacks, undefined, config?.tags, undefined, config?.metadata)));\n        const runManagers = await Promise.all(callbackManagers.map((callbackManager, i) => callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), undefined, undefined, undefined, undefined, configList[i].runName)));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => this._patchConfig(configList[j], runManager?.getChild())), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n */\nexport class RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = atee(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, this._patchConfig(options, runManager?.getChild()));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        return IterableReadableStream.fromAsyncGenerator(this.transform(generator(), options));\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n */\nexport class RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0 ? undefined : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        return IterableReadableStream.fromAsyncGenerator(this.transform(generator(), options));\n    }\n}\n","import { CallbackManager, } from \"../callbacks/manager.js\";\nexport const DEFAULT_RECURSION_LIMIT = 25;\nexport async function getCallbackManagerForConfig(config) {\n    return CallbackManager.configure(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n}\nexport function mergeConfigs(config, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\noptions) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const copy = { ...config };\n    if (options) {\n        for (const key of Object.keys(options)) {\n            if (key === \"metadata\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"tags\") {\n                copy[key] = (copy[key] ?? []).concat(options[key] ?? []);\n            }\n            else if (key === \"configurable\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"callbacks\") {\n                const baseCallbacks = copy.callbacks;\n                const providedCallbacks = options.callbacks ?? config.callbacks;\n                // callbacks can be either undefined, Array<handler> or manager\n                // so merging two callbacks values has 6 cases\n                if (Array.isArray(providedCallbacks)) {\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        copy.callbacks = baseCallbacks.concat(providedCallbacks);\n                    }\n                    else {\n                        // baseCallbacks is a manager\n                        const manager = baseCallbacks.copy();\n                        for (const callback of providedCallbacks) {\n                            manager.addHandler(callback, true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                }\n                else if (providedCallbacks) {\n                    // providedCallbacks is a manager\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        const manager = providedCallbacks.copy();\n                        for (const callback of baseCallbacks) {\n                            manager.addHandler(callback, true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                    else {\n                        // baseCallbacks is also a manager\n                        copy.callbacks = new CallbackManager(providedCallbacks.parentRunId, {\n                            handlers: baseCallbacks.handlers.concat(providedCallbacks.handlers),\n                            inheritableHandlers: baseCallbacks.inheritableHandlers.concat(providedCallbacks.inheritableHandlers),\n                            tags: Array.from(new Set(baseCallbacks.tags.concat(providedCallbacks.tags))),\n                            inheritableTags: Array.from(new Set(baseCallbacks.inheritableTags.concat(providedCallbacks.inheritableTags))),\n                            metadata: {\n                                ...baseCallbacks.metadata,\n                                ...providedCallbacks.metadata,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                copy[key] = options[key] ?? copy[key];\n            }\n        }\n    }\n    return copy;\n}\n","import { BaseCallbackHandler, } from \"../callbacks/base.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nfunction convertToDottedOrderFormat(epoch, runId) {\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}000Z`) +\n        runId);\n}\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    copy() {\n        return this;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    async _startTrace(run) {\n        const currentDottedOrder = convertToDottedOrderFormat(run.start_time, run.id);\n        const storedRun = { ...run };\n        if (storedRun.parent_run_id !== undefined) {\n            const parentRun = this.runMap.get(storedRun.parent_run_id);\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                }\n                else {\n                    console.warn(`Parent run with UUID ${storedRun.parent_run_id} not found.`);\n                }\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n        }\n        this.runMap.set(storedRun.id, storedRun);\n        await this.onRunCreate?.(storedRun);\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        this.runMap.delete(run.id);\n        await this.onRunUpdate?.(run);\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    async handleToolEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token);\n        return run;\n    }\n}\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    402,\n    403,\n    404,\n    405,\n    406,\n    407,\n    408,\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"TimeoutError\") ||\n        error.name === \"TimeoutError\" ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n","// @ts-nocheck\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: _deepClone(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        hasUndefined(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty, } from \"./helpers.js\";\nimport { applyPatch } from \"./core.js\";\nvar beforeDict = new WeakMap();\nclass Mirror {\n    constructor(obj) {\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.obj = obj;\n    }\n}\nclass ObserverInfo {\n    constructor(callback, observer) {\n        Object.defineProperty(this, \"callback\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callback = callback;\n        this.observer = observer;\n    }\n}\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        const observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = () => {\n            generate(observer);\n        };\n        var fastCheck = () => {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== \"undefined\") {\n            //not Node\n            window.addEventListener(\"mouseup\", fastCheck);\n            window.addEventListener(\"keyup\", fastCheck);\n            window.addEventListener(\"mousedown\", fastCheck);\n            window.addEventListener(\"keydown\", fastCheck);\n            window.addEventListener(\"change\", fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = () => {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"mouseup\", fastCheck);\n            window.removeEventListener(\"keyup\", fastCheck);\n            window.removeEventListener(\"mousedown\", fastCheck);\n            window.removeEventListener(\"keydown\", fastCheck);\n            window.removeEventListener(\"change\", fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible = false) {\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) &&\n            !(obj[key] === undefined &&\n                oldVal !== undefined &&\n                Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" &&\n                oldVal != null &&\n                typeof newVal == \"object\" &&\n                newVal != null &&\n                Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({\n                            op: \"test\",\n                            path: path + \"/\" + escapePathComponent(key),\n                            value: _deepClone(oldVal),\n                        });\n                    }\n                    patches.push({\n                        op: \"replace\",\n                        path: path + \"/\" + escapePathComponent(key),\n                        value: _deepClone(newVal),\n                    });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({\n                    op: \"test\",\n                    path: path + \"/\" + escapePathComponent(key),\n                    value: _deepClone(oldVal),\n                });\n            }\n            patches.push({\n                op: \"remove\",\n                path: path + \"/\" + escapePathComponent(key),\n            });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({\n                op: \"add\",\n                path: path + \"/\" + escapePathComponent(key),\n                value: _deepClone(obj[key]),\n            });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible = false) {\n    var patches = [];\n    _generate(tree1, tree2, patches, \"\", invertible);\n    return patches;\n}\n"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","options","buf","offset","rnds","random","arr","unsafeStringify","BaseCallbackHandlerMethodsClass","BaseCallbackHandler","lc_namespace","this","name","lc_secrets","lc_attributes","lc_aliases","lc_name","lc_id","constructor","input","super","Object","defineProperty","enumerable","configurable","writable","value","process","env","LANGCHAIN_CALLBACKS_BACKGROUND","lc_kwargs","ignoreLLM","ignoreChain","ignoreAgent","ignoreRetriever","copy","toJSON","prototype","call","toJSONNotImplemented","fromMethods","methods","assign","wrap","style","text","open","close","tryJsonStringify","obj","fallback","JSON","stringify","err","elapsed","run","end_time","start_time","toFixed","color","ConsoleCallbackHandler","arguments","persistRun","_run","Promise","resolve","getParents","parents","currentRun","parent_run_id","parent","runMap","get","getBreadcrumbs","string","reverse","map","execution_order","run_type","length","join","grey","onChainStart","crumbs","console","log","green","inputs","onChainEnd","cyan","outputs","onChainError","red","error","onLLMStart","prompts","p","trim","onLLMEnd","onLLMError","onToolStart","onToolEnd","output","onToolError","onRetrieverStart","onRetrieverEnd","onRetrieverError","onAgentAction","agentRun","blue","actions","STATUS_NO_RETRY","AsyncCaller","params","maxConcurrency","Infinity","maxRetries","PQueue","queue","concurrency","callable","args","add","catch","onFailedAttempt","message","startsWith","code","status","response","includes","retries","randomize","throwOnTimeout","callWithOptions","signal","race","_","reject","addEventListener","fetch","then","res","ok","isLangChainMessage","_getType","convertLangChainMessageToExample","converted","type","data","content","additional_kwargs","keys","isDeno","Deno","runtimeEnvironment","cachedCommitSHAs","async","undefined","window","document","versions","node","globalThis","navigator","userAgent","getEnv","releaseEnv","common_release_envs","shas","envVar","getShas","library","runtime","e","isLocalhost","url","hostname","replace","split","raiseForStatus","operation","body","statusText","trimQuotes","str","hideInputs","hideOutputs","assertUuid","uuid","test","config","defaultConfig","getDefaultClientConfig","apiUrl","apiKey","webUrl","validateApiKeyIfHosted","timeout_ms","caller","callerOptions","getHostUrl","headers","_getResponse","path","queryParams","paramsString","method","AbortSignal","timeout","_get","json","_getPaginated","URLSearchParams","Number","limit","set","String","items","_getCursorPaginatedList","requestMethod","dataKey","bodyParams","responseBody","cursors","next","cursor","createRun","extra","runtimeEnv","session_name","project_name","runCreate","updateRun","runId","readRun","loadChildRuns","child_run_ids","_loadChildRuns","getRunUrl","projectOpts","sessionId","session_id","projectName","readProject","id","projectId","tenantId","_getTenantId","run_","app_path","childRuns","iterable","result","item","toArray","listRuns","treemap","runs","sort","a","b","dotted_order","localeCompare","childRun","child_runs","parentRunId","referenceExampleId","startTime","executionOrder","runType","query","filter","projectId_","session","reference_example","parent_run","toISOString","shareRun","shareId","run_id","share_token","unshareRun","readRunSharedLink","listSharedRuns","shareToken","runIds","append","readDatasetSharedSchema","datasetId","datasetName","readDataset","shareSchema","shareDataset","dataset_id","unshareDataset","readSharedDataset","createProject","description","metadata","upsert","projectExtra","referenceDatasetId","upsert_","endpoint","updateProject","endTime","Date","Array","isArray","_tenantId","projects","tenant_id","listProjects","projectIds","nameContains","referenceDatasetName","referenceFree","dataset","deleteProject","uploadCsv","csvFile","fileName","inputKeys","outputKeys","dataType","formData","FormData","forEach","key","detail","createDataset","data_type","readDatasetOpenaiFinetuning","line","parse","listDatasets","datasetIds","datasetNameContains","id_","datasets","deleteDataset","datasetId_","createExample","createdAt","exampleId","created_at","createLLMExample","generation","createChatExample","generations","finalInput","finalOutput","readExample","listExamples","exampleIds","examples","deleteExample","updateExample","update","evaluateRun","evaluator","sourceInfo","referenceExample","reference_example_id","feedbackResult","sourceInfo_","evaluatorInfo","createFeedback","score","comment","correction","feedbackSourceType","sourceRunId","feedbackId","eager","feedback_source","feedback","updateFeedback","feedbackUpdate","readFeedback","deleteFeedback","listFeedback","feedbackKeys","feedbackSourceTypes","feedbacks","fields","client","_convertToCreate","example_id","_persistRunSingle","persistedRun","_updateRunSingle","runUpdate","events","consumeCallback","promiseFn","wait","autoStart","parseCallbackConfigArg","arg","callbacks","BaseCallbackManager","setHandler","handler","setHandlers","BaseRunManager","handlers","inheritableHandlers","tags","inheritableTags","inheritableMetadata","_parentRunId","handleText","all","awaitHandlers","CallbackManagerForRetrieverRun","getChild","tag","manager","CallbackManager","addTags","addMetadata","handleRetrieverEnd","documents","handleRetrieverError","CallbackManagerForLLMRun","handleLLMNewToken","token","idx","_runId","_tags","prompt","completion","handleLLMError","handleLLMEnd","CallbackManagerForChainRun","handleChainError","kwargs","handleChainEnd","handleAgentAction","action","handleAgentEnd","CallbackManagerForToolRun","handleToolError","handleToolEnd","handleLLMStart","llm","extraParams","_metadata","runName","handleChatModelStart","messages","messageGroup","messageString","handleChainStart","chain","handleToolStart","tool","handleRetrieverStart","retriever","addHandler","inherit","removeHandler","_handler","removeTags","removeMetadata","additionalHandlers","inheritable","h","some","fromHandlers","Handler","configure","localHandlers","localTags","localMetadata","callbackManager","ensureHandler","verboseEnabled","verbose","tracingV2Enabled","tracingEnabled","consoleHandler","getTracingV2CallbackHandler","keyToJson","mapKeys","mapper","mapped","hasOwn","shallowCopy","replaceSecrets","root","secretsMap","secretId","entries","last","partsReverse","current","part","lc","get_lc_unique_name","serializableClass","parentClass","getPrototypeOf","Serializable","_args","lc_serializable","aliases","secrets","reduce","acc","Reflect","keyPath","read","write","mergeContent","firstContent","secondContent","BaseMessage","toDict","toChunk","HumanMessageChunk","AIMessageChunk","SystemMessageChunk","FunctionMessageChunk","ChatMessage","isInstance","ChatMessageChunk","isOpenAIToolCallArray","every","v","index","BaseMessageChunk","_mergeAdditionalKwargs","left","right","merged","toolCall","function","HumanMessage","concat","chunk","AIMessage","SystemMessage","role","isBaseMessage","messageLike","coerceMessageLikeToMessage","getBufferString","humanPrefix","aiPrefix","string_messages","m","nameStr","BasePromptValue","StringPromptValue","toChatMessages","ChatPromptValue","IterableReadableStream","ReadableStream","ensureReader","reader","getReader","done","releaseLock","locked","cancelPromise","cancel","Symbol","asyncIterator","fromReadableStream","stream","start","controller","pump","enqueue","fromAsyncGenerator","generator","pull","atee","iter","buffers","from","buffer","shift","first","second","AsyncGeneratorWithSetup","startSetup","setup","firstResult","firstResultUsed","return","throw","RunLogPatch","ops","other","states","RunLog","state","newDocument","LogStreamCallbackHandler","autoClose","includeNames","includeTypes","includeTags","excludeNames","excludeTypes","excludeTags","transformStream","TransformStream","writer","getWriter","receiveStream","readable","_includeRun","runTags","include","find","onRunCreate","op","streamed_output","final_output","logs","counterMapByRunName","count","keyMapByRunId","logEntry","streamed_output_str","onRunUpdate","patch","onLLMNewToken","RootListenersTracer","onStart","onEnd","onError","argOnStart","argOnEnd","argOnError","rootId","_coerceToDict","defaultKey","Runnable","getName","suffix","RunnableBinding","bound","RunnableEach","withRetry","RunnableRetry","maxAttemptNumber","stopAfterAttempt","withConfig","withFallbacks","RunnableWithFallbacks","runnable","fallbacks","_getOptionsList","batch","batchOptions","configList","batchCalls","invoke","returnExceptions","_streamIterator","_separateRunnableConfigFromCallOptions","runnableConfig","callOptions","_callWithConfig","func","callbackManager_","runManager","_batchWithConfig","optionsList","callbackManagers","runManagers","_transformStreamWithConfig","inputGenerator","transformer","finalInputSupported","finalOutputSupported","pipe","to","gen","pipeGeneratorWithSetup","wrapInputForTracing","_patchConfig","recursionLimit","newConfig","coerceable","RunnableSequence","_coerceToRunnable","pick","RunnablePick","mapping","RunnableAssign","RunnableMap","steps","transform","finalChunk","streamLog","streamOptions","copiedCallbacks","runnableStream","runnableStreamPromise","consumeRunnableStream","isRunnable","thing","lc_runnable","withListeners","configFactories","_mergeConfig","configFactory","mergedOptions","individualOption","isRunnableBinding","_invoke","_patchConfigForRetry","attempt","attemptNumber","Math","max","_batch","configs","resultsMap","remainingIndexes","remainingInputs","patchedConfigs","results","firstException","resultMapIndex","parseInt","middle","nextStepInput","initialSteps","step","finalOutputs","nextStepInputs","j","concatSupported","finalGenerator","isRunnableSequence","runnables","getStepsKeys","_transform","inputCopies","tasks","Map","size","values","delete","RunnableLambda","firstError","mapperResult","mapperKeys","forPassthrough","forMapper","mapperOutput","firstMapperChunkPromise","filtered","fromEntries","_pick","picked","DEFAULT_RECURSION_LIMIT","getCallbackManagerForConfig","mergeConfigs","baseCallbacks","providedCallbacks","callback","Set","BaseTracer","_fields","_addChildRun","parentRun","_startTrace","currentDottedOrder","epoch","storedRun","child_execution_order","trace_id","warn","_endTrace","_getExecutionOrder","now","finalExtraParams","serialized","time","onAgentEnd","onText","defaultFailedAttemptHandler","_hasOwnProperty","hasOwnProperty","isInteger","len","charCode","charCodeAt","hasUndefined","objKeys","k","objKeysLength","patchErrorMessageFormatter","messageParts","PatchError","tree","setPrototypeOf","JsonPatchError","deepClone","objOps","remove","removed","move","getValueByPointer","originalValue","applyOperation","valueToCopy","_areEquals","arrOps","splice","pointer","getOriginalDestination","validateOperation","mutateDocument","banPrototypeModifications","validator","returnValue","existingPathFragment","validateFunction","t","indexOf","TypeError","applyReducer","operationResult","pathLen","existingPathLen","validate","sequence","externalValidator","arrA","arrB","WeakMap"],"sourceRoot":""}