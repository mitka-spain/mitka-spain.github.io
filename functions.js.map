{"version":3,"file":"functions.js","mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AAIA,SAAsBA,MAAMA,CAACC,QAAsB,EAAEC,UAAsC;;;;;;UACnFC,YAAY,GAAGF,QAAQ,CAACG,IAAI,EAAE,CAACA,IAAI,EAAE,CAACC,IAAI,CAAC,IAAI,CAAC;UAC/C,qBAAMC,MAAM,CAACC,SAAS,CAC1BC,QAAQ,CAACL,YAAY,CAAC,CACtBM,IAAI,CAAC,UAACC,IAAI;YACTC,gBAAgB,CAACD,IAAI,CAACV,MAAM,EAAEE,UAAU,CAACU,OAAO,CAAC;YACjD,OAAOF,IAAI,CAACG,WAAW;UACzB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,CAAC;YAAK,OAAAC,OAAO,CAACC,MAAM,CAAC,IAAIC,eAAe,CAACC,KAAK,CAACD,eAAe,CAACE,SAAS,CAACC,gBAAgB,EAAEN,CAAC,CAAC,CAAC;UAAxF,CAAwF,CAAC;;UANzG,sBAAOO,EAAA,CAAAC,IAAA,EAMkG;;;;;AAR3GC,cAAA,GAAAxB,MAAA;AAWA,SAAeW,gBAAgBA,CAACX,MAAc,EAAEY,OAAe;;;;;;;UAE7D,QAAQZ,MAAM,CAACyB,WAAW,EAAE;YAC1B,KAAK,KAAK;cACRC,KAAK,GAAG,OAAO;cACf;YACF,KAAK,IAAI;cACPA,KAAK,GAAG,KAAK;cACb;YACF,KAAK,SAAS;cACZA,KAAK,GAAG,QAAQ;cAChB;YACF;cACEA,KAAK,GAAG,OAAO;;UAEnB,qBAAMC,KAAK,CAACC,GAAG,CAAC,UAAOC,OAAO;YAAA,OAAAC,SAAA,CAAAC,KAAA;;;;;oBACtBT,EAAA,GAAqBV,OAAO,CAACoB,KAAK,CAAC,GAAG,CAAC,EAAtCC,SAAS,GAAAX,EAAA,KAAEY,KAAK,GAAAZ,EAAA;oBACjBa,aAAa,GAAGN,OAAO,CAACO,QAAQ,CAACC,UAAU,CAACC,OAAO,CAACL,SAAS,CAAC,CAACM,QAAQ,CAACL,KAAK,CAAC;oBACpFC,aAAa,CAACK,MAAM,CAACC,IAAI,CAACf,KAAK,GAAGA,KAAK;oBACvC,qBAAMG,OAAO,CAACa,IAAI,EAAE;;oBAApBC,EAAA,CAAApB,IAAA,EAAoB;;;;;WACrB,CAAC;;UALFD,EAAA,CAAAC,IAAA,EAKE;;;;;;AAGJL,eAAe,CAAC0B,SAAS,CAAC,QAAQ,EAAE5C,MAAM,CAAC;;;;;;;UExC3C;UACA;UACA;UACA;UACA","sources":["webpack://inqviz-excel/./src/functions/functions.ts","webpack://inqviz-excel/webpack/before-startup","webpack://inqviz-excel/webpack/startup","webpack://inqviz-excel/webpack/after-startup"],"sourcesContent":["/* global window */\n\n/**\n * @customfunction\n * @requiresAddress\n */\nexport async function answer(question: string[][][], invocation: CustomFunctions.Invocation): Promise<string> {\n  const fullQuestion = question.flat().flat().join(\"\\n\");\n  return await window.responder\n    .response(fullQuestion)\n    .then((resp) => {\n      applyAnswerColor(resp.answer, invocation.address);\n      return resp.explanation;\n    })\n    .catch((e) => Promise.reject(new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidReference, e)));\n}\n\nasync function applyAnswerColor(answer: string, address: string) {\n  let color: string;\n  switch (answer.toLowerCase()) {\n    case \"yes\":\n      color = \"green\";\n      break;\n    case \"no\":\n      color = \"red\";\n      break;\n    case \"unknown\":\n      color = \"yellow\";\n      break;\n    default:\n      color = \"white\";\n  }\n  await Excel.run(async (context) => {\n    const [worksheet, range] = address.split(\"!\");\n    const functionRange = context.workbook.worksheets.getItem(worksheet).getRange(range);\n    functionRange.format.fill.color = color;\n    await context.sync();\n  });\n}\n\nCustomFunctions.associate(\"ANSWER\", answer);","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/functions/functions.ts\"](0, __webpack_exports__);\n",""],"names":["answer","question","invocation","fullQuestion","flat","join","window","responder","response","then","resp","applyAnswerColor","address","explanation","catch","e","Promise","reject","CustomFunctions","Error","ErrorCode","invalidReference","_a","sent","exports","toLowerCase","color","Excel","run","context","__awaiter","_this","split","worksheet","range","functionRange","workbook","worksheets","getItem","getRange","format","fill","sync","_b","associate"],"sourceRoot":""}