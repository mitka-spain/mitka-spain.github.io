{"version":3,"file":"functions.js","mappings":"m8CAMA,SAAsBA,EAAOC,EAAwBC,G,uGAE5C,OADDC,EAAeF,EAASG,OAAOA,OAAOC,KAAK,MAC1C,GAAMC,OAAOC,UACjBC,SAASL,GACTM,MAAK,SAAOC,GAAI,OAAAC,EAAAC,OAAA,qB,kDACf,SAAMC,EAAiBH,EAAKV,OAAQE,EAAWY,U,OAC/C,OADAC,EAAAC,OACO,CAAP,EAAON,EAAKO,a,UAEbC,OAAM,SAACC,GAAM,OAAAC,QAAQC,OAAO,IAAIC,gBAAgBC,MAAMD,gBAAgBE,UAAUC,iBAAkBN,GAArF,K,OANhB,MAAO,CAAP,EAAOJ,EAAAC,Q,OAST,SAAeH,EAAiBb,EAAgBc,G,uGAE9C,OAAQd,EAAO0B,eACb,IAAK,MACHC,EAAQ,QACR,MACF,IAAK,KACHA,EAAQ,MACR,MACF,IAAK,UACHA,EAAQ,SACR,MACF,QACEA,EAAQ,QAEL,SAAMC,MAAMC,KAAI,SAAOC,GAAO,OAAAnB,EAAAC,OAAA,qB,4DAI5B,OAHDG,EAAqBD,EAAQiB,MAAM,KAAKC,KAAI,SAAAC,GAAK,OAAAA,EAAEC,QAAQ,WAAY,GAAtB,IAAhDC,EAASpB,EAAA,GAAEqB,EAAKrB,EAAA,GACDe,EAAQO,SAASC,WAAWC,QAAQJ,GAAWK,SAASJ,GAChEK,OAAOC,KAAKf,MAAQA,EAC3B,GAAMG,EAAQa,Q,OAArB,MAAO,CAAP,EAAOC,EAAA5B,Q,kBAJT,MAAO,CAAP,EAAOD,EAAAC,Q,wEA1BT6B,EAAAA,OAAA7C,EAkCAsB,gBAAgBwB,UAAU,SAAU9C,E,ICpChB,OAAO,EADD,CAAC,E","sources":["webpack://inqviz-excel/./src/functions/functions.ts","webpack://inqviz-excel/webpack/startup"],"sourcesContent":["/* global window */\n\n/**\n * @customfunction\n * @requiresAddress\n */\nexport async function answer(question: string[][][], invocation: CustomFunctions.Invocation): Promise<string> {\n  const fullQuestion = question.flat().flat().join(\"\\n\");\n  return await window.responder\n    .response(fullQuestion)\n    .then(async (resp) => {\n      await applyAnswerColor(resp.answer, invocation.address);\n      return resp.explanation;\n    })\n    .catch((e) => Promise.reject(new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidReference, e)));\n}\n\nasync function applyAnswerColor(answer: string, address: string) {\n  let color: string;\n  switch (answer.toLowerCase()) {\n    case \"yes\":\n      color = \"green\";\n      break;\n    case \"no\":\n      color = \"red\";\n      break;\n    case \"unknown\":\n      color = \"yellow\";\n      break;\n    default:\n      color = \"white\";\n  }\n  return await Excel.run(async (context) => {\n    const [worksheet, range] = address.split(\"!\").map(s => s.replace(/^'+|'+$/g, ''));\n    const functionRange = context.workbook.worksheets.getItem(worksheet).getRange(range);\n    functionRange.format.fill.color = color;\n    return await context.sync();\n  });\n}\n\nCustomFunctions.associate(\"ANSWER\", answer);","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[26098](0, __webpack_exports__);\n"],"names":["answer","question","invocation","fullQuestion","flat","join","window","responder","response","then","resp","__awaiter","_this","applyAnswerColor","address","_a","sent","explanation","catch","e","Promise","reject","CustomFunctions","Error","ErrorCode","invalidReference","toLowerCase","color","Excel","run","context","split","map","s","replace","worksheet","range","workbook","worksheets","getItem","getRange","format","fill","sync","_b","exports","associate"],"sourceRoot":""}