{"version":3,"file":"544.js","mappings":"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","sources":["webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/js-sha1/hash.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/caches.js","webpack://inqviz-excel/./node_modules/js-tiktoken/dist/chunk-DRAV7SPV.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/utils/tiktoken.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/language_models/base.js","webpack://inqviz-excel/./node_modules/langchain/dist/chains/base.js","webpack://inqviz-excel/./node_modules/@langchain/core/dist/outputs.js"],"sourcesContent":["// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nexport const insecureHash = (message) => {\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n","import { insecureHash } from \"./utils/hash.js\";\nimport { mapStoredMessageToChatMessage, } from \"./messages/index.js\";\n/**\n * This cache key should be consistent across all versions of langchain.\n * It is currently NOT consistent across versions of langchain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * seperate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of langchain.\n */\nexport const getCacheKey = (...strings) => insecureHash(strings.join(\"_\"));\nexport function deserializeStoredGeneration(storedGeneration) {\n    if (storedGeneration.message !== undefined) {\n        return {\n            text: storedGeneration.text,\n            message: mapStoredMessageToChatMessage(storedGeneration.message),\n        };\n    }\n    else {\n        return { text: storedGeneration.text };\n    }\n}\nexport function serializeGeneration(generation) {\n    const serializedValue = {\n        text: generation.text,\n    };\n    if (generation.message !== undefined) {\n        serializedValue.message = generation.message.toDict();\n    }\n    return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nexport class BaseCache {\n}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(getCacheKey(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n","import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"text-embedding-ada-002\": {\n      return \"cl100k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n","import { Tiktoken, getEncodingNameForModel, } from \"js-tiktoken/lite\";\nimport { AsyncCaller } from \"./async_caller.js\";\nconst cache = {};\nconst caller = /* #__PURE__ */ new AsyncCaller({});\nexport async function getEncoding(encoding) {\n    if (!(encoding in cache)) {\n        cache[encoding] = caller\n            .fetch(`https://tiktoken.pages.dev/js/${encoding}.json`)\n            .then((res) => res.json())\n            .then((data) => new Tiktoken(data))\n            .catch((e) => {\n            delete cache[encoding];\n            throw e;\n        });\n    }\n    return await cache[encoding];\n}\nexport async function encodingForModel(model) {\n    return getEncoding(getEncodingNameForModel(model));\n}\n","import { InMemoryCache } from \"../caches.js\";\nimport { StringPromptValue, ChatPromptValue, } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage, } from \"../messages/index.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...params,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof params.cache === \"object\") {\n            this.cache = params.cache;\n        }\n        else if (params.cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    async getNumTokens(content) {\n        // TODO: Figure out correct value.\n        if (typeof content !== \"string\") {\n            return 0;\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(content.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(content).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(callOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n","import { RUN_KEY } from \"../schema/index.js\";\nimport { CallbackManager, parseCallbackConfigArg, } from \"../callbacks/manager.js\";\nimport { BaseLangChain } from \"../base_language/index.js\";\n/**\n * Base interface that all chains must implement.\n */\nexport class BaseChain extends BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"chains\", this._chainType()];\n    }\n    constructor(fields, \n    /** @deprecated */\n    verbose, \n    /** @deprecated */\n    callbacks) {\n        if (arguments.length === 1 &&\n            typeof fields === \"object\" &&\n            !(\"saveContext\" in fields)) {\n            // fields is not a BaseMemory\n            const { memory, callbackManager, ...rest } = fields;\n            super({ ...rest, callbacks: callbackManager ?? rest.callbacks });\n            this.memory = memory;\n        }\n        else {\n            // fields is a BaseMemory\n            super({ verbose, callbacks });\n            this.memory = fields;\n        }\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = { ...values };\n        if (\"signal\" in valuesForMemory) {\n            delete valuesForMemory.signal;\n        }\n        if (\"timeout\" in valuesForMemory) {\n            delete valuesForMemory.timeout;\n        }\n        return valuesForMemory;\n    }\n    /**\n     * Invoke the chain with the provided input and returns the output.\n     * @param input Input values for the chain run.\n     * @param config Optional configuration for the Runnable.\n     * @returns Promise that resolves with the output of the chain run.\n     */\n    async invoke(input, config) {\n        return this.call(input, config);\n    }\n    _validateOutputs(outputs) {\n        const missingKeys = this.outputKeys.filter((k) => !(k in outputs));\n        if (missingKeys.length) {\n            throw new Error(`Missing output keys: ${missingKeys.join(\", \")} from chain ${this._chainType()}`);\n        }\n    }\n    async prepOutputs(inputs, outputs, returnOnlyOutputs = false) {\n        this._validateOutputs(outputs);\n        if (this.memory) {\n            await this.memory.saveContext(inputs, outputs);\n        }\n        if (returnOnlyOutputs) {\n            return outputs;\n        }\n        return { ...inputs, ...outputs };\n    }\n    /**\n     * Return a json-like object representing this chain.\n     */\n    serialize() {\n        throw new Error(\"Method not implemented.\");\n    }\n    async run(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, config) {\n        const inputKeys = this.inputKeys.filter((k) => !this.memory?.memoryKeys.includes(k) ?? true);\n        const isKeylessInput = inputKeys.length <= 1;\n        if (!isKeylessInput) {\n            throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const values = inputKeys.length ? { [inputKeys[0]]: input } : {};\n        const returnValues = await this.call(values, config);\n        const keys = Object.keys(returnValues);\n        if (keys.length === 1) {\n            return returnValues[keys[0]];\n        }\n        throw new Error(\"return values have multiple keys, `run` only supported when one key currently\");\n    }\n    async _formatValues(values) {\n        const fullValues = { ...values };\n        if (fullValues.timeout && !fullValues.signal) {\n            fullValues.signal = AbortSignal.timeout(fullValues.timeout);\n            delete fullValues.timeout;\n        }\n        if (!(this.memory == null)) {\n            const newValues = await this.memory.loadMemoryVariables(this._selectMemoryInputs(values));\n            for (const [key, value] of Object.entries(newValues)) {\n                fullValues[key] = value;\n            }\n        }\n        return fullValues;\n    }\n    /**\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    async call(values, config, \n    /** @deprecated */\n    tags) {\n        const fullValues = await this._formatValues(values);\n        const parsedConfig = parseCallbackConfigArg(config);\n        const callbackManager_ = await CallbackManager.configure(parsedConfig.callbacks, this.callbacks, parsedConfig.tags || tags, this.tags, parsedConfig.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), fullValues, undefined, undefined, undefined, undefined, parsedConfig.runName);\n        let outputValues;\n        try {\n            outputValues = await (values.signal\n                ? Promise.race([\n                    this._call(fullValues, runManager),\n                    new Promise((_, reject) => {\n                        values.signal?.addEventListener(\"abort\", () => {\n                            reject(new Error(\"AbortError\"));\n                        });\n                    }),\n                ])\n                : this._call(fullValues, runManager));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        if (!(this.memory == null)) {\n            await this.memory.saveContext(this._selectMemoryInputs(values), outputValues);\n        }\n        await runManager?.handleChainEnd(outputValues);\n        // add the runManager's currentRunId to the outputValues\n        Object.defineProperty(outputValues, RUN_KEY, {\n            value: runManager ? { runId: runManager?.runId } : undefined,\n            configurable: true,\n        });\n        return outputValues;\n    }\n    /**\n     * Call the chain on all inputs in the list\n     */\n    async apply(inputs, config) {\n        return Promise.all(inputs.map(async (i, idx) => this.call(i, config?.[idx])));\n    }\n    /**\n     * Load a chain from a json-like object describing it.\n     */\n    static async deserialize(data, values = {}) {\n        switch (data._type) {\n            case \"llm_chain\": {\n                const { LLMChain } = await import(\"./llm_chain.js\");\n                return LLMChain.deserialize(data);\n            }\n            case \"sequential_chain\": {\n                const { SequentialChain } = await import(\"./sequential_chain.js\");\n                return SequentialChain.deserialize(data);\n            }\n            case \"simple_sequential_chain\": {\n                const { SimpleSequentialChain } = await import(\"./sequential_chain.js\");\n                return SimpleSequentialChain.deserialize(data);\n            }\n            case \"stuff_documents_chain\": {\n                const { StuffDocumentsChain } = await import(\"./combine_docs_chain.js\");\n                return StuffDocumentsChain.deserialize(data);\n            }\n            case \"map_reduce_documents_chain\": {\n                const { MapReduceDocumentsChain } = await import(\"./combine_docs_chain.js\");\n                return MapReduceDocumentsChain.deserialize(data);\n            }\n            case \"refine_documents_chain\": {\n                const { RefineDocumentsChain } = await import(\"./combine_docs_chain.js\");\n                return RefineDocumentsChain.deserialize(data);\n            }\n            case \"vector_db_qa\": {\n                const { VectorDBQAChain } = await import(\"./vector_db_qa.js\");\n                return VectorDBQAChain.deserialize(data, values);\n            }\n            case \"api_chain\": {\n                const { APIChain } = await import(\"./api/api_chain.js\");\n                return APIChain.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\n","export const RUN_KEY = \"__run\";\n/**\n * Chunk of a single generation. Used for streaming.\n */\nexport class GenerationChunk {\n    constructor(fields) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"generationInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = fields.text;\n        this.generationInfo = fields.generationInfo;\n    }\n    concat(chunk) {\n        return new GenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n        });\n    }\n}\nexport class ChatGenerationChunk extends GenerationChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.message = fields.message;\n    }\n    concat(chunk) {\n        return new ChatGenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n            message: this.message.concat(chunk.message),\n        });\n    }\n}\n"],"names":["root","window","HEX_CHARS","split","EXTRA","SHIFT","blocks","Sha1","sharedMemory","this","h0","h1","h2","h3","h4","block","start","bytes","hBytes","finalized","hashed","first","prototype","update","message","notString","constructor","ArrayBuffer","Uint8Array","code","i","index","length","charCodeAt","lastByteIndex","hash","finalize","j","t","a","b","c","d","e","hex","toString","digest","array","arrayBuffer","buffer","dataView","DataView","setUint32","getCacheKey","strings","insecureHash","join","BaseCache","GLOBAL_MAP","Map","InMemoryCache","map","super","Object","defineProperty","enumerable","configurable","writable","value","cache","lookup","prompt","llmKey","Promise","resolve","get","set","global","__defProp","bytePairEncode","piece","ranks","parts","Array","from","_","end","minRank","slice","rank","splice","bytePairMerge","p","filter","x","key","_Tiktoken","specialTokens","inverseSpecialTokens","patStr","textEncoder","TextEncoder","textDecoder","TextDecoder","rankMap","textMap","extendedSpecialTokens","pat_str","uncompressed","bpe_ranks","Boolean","reduce","memo","offsetStr","tokens","offset","Number","parseInt","forEach","token","entries","special_tokens","text","encode","allowedSpecial","disallowedSpecial","regexes","RegExp","specialRegex","specialTokenRegex","keys","ret","allowedSpecialSet","Set","disallowedSpecialSet","has","size","disallowedSpecialRegex","specialMatch","match","Error","nextSpecial","startFind","lastIndex","exec","substring","matchAll","token2","push","decode","res","i2","mergedArray","Tiktoken","obj","__defNormalProp","replace","caller","BaseLangChain","lc_attributes","callbacks","undefined","verbose","params","tags","metadata","BaseLanguageModel","callKeys","callbackManager","getNumTokens","content","numTokens","Math","ceil","_encoding","async","model","encoding","fetch","then","json","data","catch","getEncoding","getEncodingNameForModel","modelName","startsWith","error","console","warn","_convertInputToPromptValue","input","isArray","_identifyingParams","_getSerializedCacheKeyParametersForCall","callOptions","_type","_llmType","_model","_modelType","serializedEntries","JSON","stringify","sort","serialize","deserialize","_data","BaseChain","lc_namespace","_chainType","fields","arguments","memory","rest","_selectMemoryInputs","values","valuesForMemory","signal","timeout","invoke","config","call","_validateOutputs","outputs","missingKeys","outputKeys","k","prepOutputs","inputs","returnOnlyOutputs","saveContext","run","inputKeys","memoryKeys","includes","returnValues","_formatValues","fullValues","AbortSignal","newValues","loadMemoryVariables","parsedConfig","callbackManager_","configure","runManager","handleChainStart","toJSON","runName","outputValues","race","_call","reject","addEventListener","handleChainError","handleChainEnd","runId","apply","all","idx","LLMChain","SequentialChain","SimpleSequentialChain","StuffDocumentsChain","MapReduceDocumentsChain","RefineDocumentsChain","VectorDBQAChain","APIChain"],"sourceRoot":""}